const colors = {
  current: "currentColor",
  transparent: "transparent",
  white: "#FFF",
  black: "#000",
  default: {
    text: "rgb(var(--color-default-text) / <alpha-value>)",
    bg: "rgb(var(--color-default-bg) / <alpha-value>)",
  },
  neutral: {
    1: "rgb(var(--color-ftw-neutral-1) / <alpha-value>)",
    2: "rgb(var(--color-ftw-neutral-2) / <alpha-value>)",
    3: "rgb(var(--color-ftw-neutral-3) / <alpha-value>)",
    4: "rgb(var(--color-ftw-neutral-4) / <alpha-value>)",
    5: "rgb(var(--color-ftw-neutral-5) / <alpha-value>)",
    6: "rgb(var(--color-ftw-neutral-6) / <alpha-value>)",
    7: "rgb(var(--color-ftw-neutral-7) / <alpha-value>)",
    8: "rgb(var(--color-ftw-neutral-8) / <alpha-value>)",
    9: "rgb(var(--color-ftw-neutral-9) / <alpha-value>)",
    10: "rgb(var(--color-ftw-neutral-10) / <alpha-value>)",
    11: "rgb(var(--color-ftw-neutral-11) / <alpha-value>)",
    12: "rgb(var(--color-ftw-neutral-12) / <alpha-value>)",
  },
  accent: {
    1: "rgb(var(--color-ftw-accent-1) / <alpha-value>)",
    2: "rgb(var(--color-ftw-accent-2) / <alpha-value>)",
    3: "rgb(var(--color-ftw-accent-3) / <alpha-value>)",
    4: "rgb(var(--color-ftw-accent-4) / <alpha-value>)",
    5: "rgb(var(--color-ftw-accent-5) / <alpha-value>)",
    6: "rgb(var(--color-ftw-accent-6) / <alpha-value>)",
    7: "rgb(var(--color-ftw-accent-7) / <alpha-value>)",
    8: "rgb(var(--color-ftw-accent-8) / <alpha-value>)",
    9: "rgb(var(--color-ftw-accent-9) / <alpha-value>)",
    10: "rgb(var(--color-ftw-accent-10) / <alpha-value>)",
    11: "rgb(var(--color-ftw-accent-11) / <alpha-value>)",
    12: "rgb(var(--color-ftw-accent-12) / <alpha-value>)",
  },
  success: {
    1: "rgb(var(--color-ftw-success-1) / <alpha-value>)",
    2: "rgb(var(--color-ftw-success-2) / <alpha-value>)",
    3: "rgb(var(--color-ftw-success-3) / <alpha-value>)",
    4: "rgb(var(--color-ftw-success-4) / <alpha-value>)",
    5: "rgb(var(--color-ftw-success-5) / <alpha-value>)",
    6: "rgb(var(--color-ftw-success-6) / <alpha-value>)",
    7: "rgb(var(--color-ftw-success-7) / <alpha-value>)",
    8: "rgb(var(--color-ftw-success-8) / <alpha-value>)",
    9: "rgb(var(--color-ftw-success-9) / <alpha-value>)",
    10: "rgb(var(--color-ftw-success-10) / <alpha-value>)",
    11: "rgb(var(--color-ftw-success-11) / <alpha-value>)",
    12: "rgb(var(--color-ftw-success-12) / <alpha-value>)",
  },
  warning: {
    1: "rgb(var(--color-ftw-warning-1) / <alpha-value>)",
    2: "rgb(var(--color-ftw-warning-2) / <alpha-value>)",
    3: "rgb(var(--color-ftw-warning-3) / <alpha-value>)",
    4: "rgb(var(--color-ftw-warning-4) / <alpha-value>)",
    5: "rgb(var(--color-ftw-warning-5) / <alpha-value>)",
    6: "rgb(var(--color-ftw-warning-6) / <alpha-value>)",
    7: "rgb(var(--color-ftw-warning-7) / <alpha-value>)",
    8: "rgb(var(--color-ftw-warning-8) / <alpha-value>)",
    9: "rgb(var(--color-ftw-warning-9) / <alpha-value>)",
    10: "rgb(var(--color-ftw-warning-10) / <alpha-value>)",
    11: "rgb(var(--color-ftw-warning-11) / <alpha-value>)",
    12: "rgb(var(--color-ftw-warning-12) / <alpha-value>)",
  },
  danger: {
    1: "rgb(var(--color-ftw-danger-1) / <alpha-value>)",
    2: "rgb(var(--color-ftw-danger-2) / <alpha-value>)",
    3: "rgb(var(--color-ftw-danger-3) / <alpha-value>)",
    4: "rgb(var(--color-ftw-danger-4) / <alpha-value>)",
    5: "rgb(var(--color-ftw-danger-5) / <alpha-value>)",
    6: "rgb(var(--color-ftw-danger-6) / <alpha-value>)",
    7: "rgb(var(--color-ftw-danger-7) / <alpha-value>)",
    8: "rgb(var(--color-ftw-danger-8) / <alpha-value>)",
    9: "rgb(var(--color-ftw-danger-9) / <alpha-value>)",
    10: "rgb(var(--color-ftw-danger-10) / <alpha-value>)",
    11: "rgb(var(--color-ftw-danger-11) / <alpha-value>)",
    12: "rgb(var(--color-ftw-danger-12) / <alpha-value>)",
  },
};

/** @type {import('npm:tailwindcss').Config} */
module.exports = {
  content: ["./src/**/*.{ts,tsx}"],
  theme: {
    colors,
    extend: {
      borderColor: ({ theme }) => ({
        ...colors,
        DEFAULT: theme("colors.neutral.6", "currentColor"),
      }),
      ringColor: ({ theme }) => ({
        ...colors,
        DEFAULT: theme("colors.accent.6", "#3b82f6"),
      }),
    },
  },
  plugins: [],
};
