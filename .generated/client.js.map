{
  "version": 3,
  "sources": ["../src/components/LoremIpsum.tsx", "https://jsr.io/@hono/hono/4.5.1/src/utils/html.ts", "https://jsr.io/@hono/hono/4.5.1/src/jsx/constants.ts", "https://jsr.io/@hono/hono/4.5.1/src/jsx/dom/utils.ts", "https://jsr.io/@hono/hono/4.5.1/src/jsx/dom/context.ts", "https://jsr.io/@hono/hono/4.5.1/src/jsx/context.ts", "https://jsr.io/@hono/hono/4.5.1/src/jsx/utils.ts", "https://jsr.io/@hono/hono/4.5.1/src/jsx/intrinsic-element/common.ts", "https://jsr.io/@hono/hono/4.5.1/src/jsx/children.ts", "https://jsr.io/@hono/hono/4.5.1/src/jsx/dom/intrinsic-element/components.ts", "https://jsr.io/@hono/hono/4.5.1/src/jsx/hooks/index.ts", "https://jsr.io/@hono/hono/4.5.1/src/jsx/dom/render.ts", "https://jsr.io/@hono/hono/4.5.1/src/jsx/dom/hooks/index.ts", "https://jsr.io/@hono/hono/4.5.1/src/jsx/dom/jsx-dev-runtime.ts", "https://jsr.io/@hono/hono/4.5.1/src/jsx/dom/components.ts", "https://jsr.io/@hono/hono/4.5.1/src/jsx/components.ts", "https://jsr.io/@hono/hono/4.5.1/src/jsx/streaming.ts", "../src/client/index.tsx"],
  "sourcesContent": ["\nexport const LoremIpsum = () => {\n  return (\n      <p class=\"italic\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. In ipsum quia consequatur odit quidem qui doloremque inventore unde quaerat. Cupiditate suscipit vel temporibus natus facilis debitis, aspernatur autem nulla. Obcaecati!</p>\n  );\n};\n", "/**\n * @module\n * HTML utility.\n */\n\nexport const HtmlEscapedCallbackPhase = {\n  Stringify: 1,\n  BeforeStream: 2,\n  Stream: 3,\n} as const\ntype HtmlEscapedCallbackOpts = {\n  buffer?: [string]\n  phase: (typeof HtmlEscapedCallbackPhase)[keyof typeof HtmlEscapedCallbackPhase]\n  context: object // An object unique to each JSX tree. This object is used as the WeakMap key.\n}\nexport type HtmlEscapedCallback = (opts: HtmlEscapedCallbackOpts) => Promise<string> | undefined\nexport type HtmlEscaped = {\n  isEscaped: true\n  callbacks?: HtmlEscapedCallback[]\n}\nexport type HtmlEscapedString = string & HtmlEscaped\n\n/**\n * StringBuffer contains string and Promise<string> alternately\n * The length of the array will be odd, the odd numbered element will be a string,\n * and the even numbered element will be a Promise<string>.\n * When concatenating into a single string, it must be processed from the tail.\n * @example\n * [\n *   'framework.',\n *   Promise.resolve('ultra fast'),\n *   'a ',\n *   Promise.resolve('is '),\n *   'Hono',\n * ]\n */\nexport type StringBuffer = (string | Promise<string>)[]\nexport type StringBufferWithCallbacks = StringBuffer & { callbacks: HtmlEscapedCallback[] }\n\nexport const raw = (value: unknown, callbacks?: HtmlEscapedCallback[]): HtmlEscapedString => {\n  const escapedString = new String(value) as HtmlEscapedString\n  escapedString.isEscaped = true\n  escapedString.callbacks = callbacks\n\n  return escapedString\n}\n\n// The `escapeToBuffer` implementation is based on code from the MIT licensed `react-dom` package.\n// https://github.com/facebook/react/blob/main/packages/react-dom-bindings/src/server/escapeTextForBrowser.js\n\nconst escapeRe = /[&<>'\"]/\n\nexport const stringBufferToString = async (\n  buffer: StringBuffer,\n  callbacks: HtmlEscapedCallback[] | undefined\n): Promise<HtmlEscapedString> => {\n  let str = ''\n  callbacks ||= []\n  for (let i = buffer.length - 1; ; i--) {\n    str += buffer[i]\n    i--\n    if (i < 0) {\n      break\n    }\n\n    let r = await buffer[i]\n    if (typeof r === 'object') {\n      callbacks.push(...((r as HtmlEscapedString).callbacks || []))\n    }\n\n    const isEscaped = (r as HtmlEscapedString).isEscaped\n    r = await (typeof r === 'object' ? (r as HtmlEscapedString).toString() : r)\n    if (typeof r === 'object') {\n      callbacks.push(...((r as HtmlEscapedString).callbacks || []))\n    }\n\n    if ((r as HtmlEscapedString).isEscaped ?? isEscaped) {\n      str += r\n    } else {\n      const buf = [str]\n      escapeToBuffer(r, buf)\n      str = buf[0]\n    }\n  }\n\n  return raw(str, callbacks)\n}\n\nexport const escapeToBuffer = (str: string, buffer: StringBuffer): void => {\n  const match = str.search(escapeRe)\n  if (match === -1) {\n    buffer[0] += str\n    return\n  }\n\n  let escape\n  let index\n  let lastIndex = 0\n\n  for (index = match; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;'\n        break\n      case 39: // '\n        escape = '&#39;'\n        break\n      case 38: // &\n        escape = '&amp;'\n        break\n      case 60: // <\n        escape = '&lt;'\n        break\n      case 62: // >\n        escape = '&gt;'\n        break\n      default:\n        continue\n    }\n\n    buffer[0] += str.substring(lastIndex, index) + escape\n    lastIndex = index + 1\n  }\n\n  buffer[0] += str.substring(lastIndex, index)\n}\n\nexport const resolveCallbackSync = (str: string | HtmlEscapedString): string => {\n  const callbacks = (str as HtmlEscapedString).callbacks as HtmlEscapedCallback[]\n  if (!callbacks?.length) {\n    return str\n  }\n  const buffer: [string] = [str]\n  const context = {}\n\n  callbacks.forEach((c) => c({ phase: HtmlEscapedCallbackPhase.Stringify, buffer, context }))\n\n  return buffer[0]\n}\n\nexport const resolveCallback = async (\n  str: string | HtmlEscapedString,\n  phase: (typeof HtmlEscapedCallbackPhase)[keyof typeof HtmlEscapedCallbackPhase],\n  preserveCallbacks: boolean,\n  context: object,\n  buffer?: [string]\n): Promise<string> => {\n  const callbacks = (str as HtmlEscapedString).callbacks as HtmlEscapedCallback[]\n  if (!callbacks?.length) {\n    return Promise.resolve(str)\n  }\n  if (buffer) {\n    buffer[0] += str\n  } else {\n    buffer = [str]\n  }\n\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then((res) =>\n    Promise.all(\n      res\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .filter<string>(Boolean as any)\n        .map((str) => resolveCallback(str, phase, false, context, buffer))\n    ).then(() => (buffer as [string])[0])\n  )\n\n  if (preserveCallbacks) {\n    return raw(await resStr, callbacks)\n  } else {\n    return resStr\n  }\n}\n", "export const DOM_RENDERER = Symbol('RENDERER')\nexport const DOM_ERROR_HANDLER = Symbol('ERROR_HANDLER')\nexport const DOM_STASH = Symbol('STASH')\nexport const DOM_INTERNAL_TAG = Symbol('INTERNAL')\nexport const PERMALINK = Symbol('PERMALINK')\n", "import type { JSXNode, Props } from '../base.ts'\nimport { DOM_INTERNAL_TAG } from '../constants.ts'\n\nexport const setInternalTagFlag = (fn: Function): Function => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ;(fn as any)[DOM_INTERNAL_TAG] = true\n  return fn\n}\n\nconst JSXNodeCompatPrototype = {\n  type: {\n    get(this: { tag: string | Function }): string | Function {\n      return this.tag\n    },\n  },\n  ref: {\n    get(this: { props?: { ref: unknown } }): unknown {\n      return this.props?.ref\n    },\n  },\n}\n\nexport const newJSXNode = (obj: { tag: string | Function; props?: Props; key?: string }): JSXNode =>\n  Object.defineProperties(obj, JSXNodeCompatPrototype) as JSXNode\n", "import type { Child } from '../base.ts'\nimport { DOM_ERROR_HANDLER } from '../constants.ts'\nimport type { Context } from '../context.ts'\nimport { globalContexts } from '../context.ts'\nimport { newJSXNode, setInternalTagFlag } from './utils.ts'\n\nexport const createContextProviderFunction =\n  <T>(values: T[]): Function =>\n  ({ value, children }: { value: T; children: Child[] }) => {\n    if (!children) {\n      return undefined\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const props: { children: any } = {\n      children: [\n        {\n          tag: setInternalTagFlag(() => {\n            values.push(value)\n          }),\n          props: {},\n        },\n      ],\n    }\n    if (Array.isArray(children)) {\n      props.children.push(...children.flat())\n    } else {\n      props.children.push(children)\n    }\n    props.children.push({\n      tag: setInternalTagFlag(() => {\n        values.pop()\n      }),\n      props: {},\n    })\n    const res = newJSXNode({ tag: '', props })\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ;(res as any)[DOM_ERROR_HANDLER] = (err: unknown) => {\n      values.pop()\n      throw err\n    }\n    return res\n  }\n\nexport const createContext = <T>(defaultValue: T): Context<T> => {\n  const values = [defaultValue]\n  const context: Context<T> = createContextProviderFunction(values) as Context<T>\n  context.values = values\n  context.Provider = context\n  globalContexts.push(context as Context<unknown>)\n  return context\n}\n", "import { raw } from '../helper/html/index.ts'\nimport type { HtmlEscapedString } from '../utils/html.ts'\nimport { JSXFragmentNode } from './base.ts'\nimport { DOM_RENDERER } from './constants.ts'\nimport { createContextProviderFunction } from './dom/context.ts'\nimport type { FC, PropsWithChildren } from './index.ts'\n\nexport interface Context<T> extends FC<PropsWithChildren<{ value: T }>> {\n  values: T[]\n  Provider: FC<PropsWithChildren<{ value: T }>>\n}\n\nexport const globalContexts: Context<unknown>[] = []\n\nexport const createContext = <T>(defaultValue: T): Context<T> => {\n  const values = [defaultValue]\n  const context: Context<T> = ((props): HtmlEscapedString | Promise<HtmlEscapedString> => {\n    values.push(props.value)\n    let string\n    try {\n      string = props.children\n        ? (Array.isArray(props.children)\n            ? new JSXFragmentNode('', {}, props.children)\n            : props.children\n          ).toString()\n        : ''\n    } finally {\n      values.pop()\n    }\n\n    if (string instanceof Promise) {\n      return string.then((resString) => raw(resString, (resString as HtmlEscapedString).callbacks))\n    } else {\n      return raw(string)\n    }\n  }) as Context<T>\n  context.values = values\n  context.Provider = context\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ;(context as any)[DOM_RENDERER] = createContextProviderFunction(values)\n\n  globalContexts.push(context as Context<unknown>)\n\n  return context\n}\n\nexport const useContext = <T>(context: Context<T>): T => {\n  return context.values.at(-1) as T\n}\n", "const normalizeElementKeyMap: Map<string, string> = new Map([\n  ['className', 'class'],\n  ['htmlFor', 'for'],\n  ['crossOrigin', 'crossorigin'],\n  ['httpEquiv', 'http-equiv'],\n  ['itemProp', 'itemprop'],\n  ['fetchPriority', 'fetchpriority'],\n  ['noModule', 'nomodule'],\n  ['formAction', 'formaction'],\n])\nexport const normalizeIntrinsicElementKey = (key: string): string =>\n  normalizeElementKeyMap.get(key) || key\n\nexport const styleObjectForEach = (\n  style: Record<string, string | number>,\n  fn: (key: string, value: string | null) => void\n): void => {\n  for (const [k, v] of Object.entries(style)) {\n    const key =\n      k[0] === '-' || !/[A-Z]/.test(k)\n        ? k // a CSS variable or a lowercase only property\n        : k.replace(/[A-Z]/g, (m) => `-${m.toLowerCase()}`) // a camelCase property. convert to kebab-case\n    fn(\n      key,\n      v == null\n        ? null\n        : typeof v === 'number'\n        ? !key.match(\n            /^(?:a|border-im|column(?:-c|s)|flex(?:$|-[^b])|grid-(?:ar|[^a])|font-w|li|or|sca|st|ta|wido|z)|ty$/\n          )\n          ? `${v}px`\n          : `${v}`\n        : v\n    )\n  }\n}\n", "export const deDupeKeyMap: Record<string, string[]> = {\n  title: [],\n  script: ['src'],\n  style: ['data-href'],\n  link: ['href'],\n  meta: ['name', 'httpEquiv', 'charset', 'itemProp'],\n}\n\nexport const domRenderers: Record<string, Function> = {}\n\nexport const dataPrecedenceAttr = 'data-precedence'\n", "import type { Child } from './base.ts'\n\nexport const toArray = (children: Child): Child[] =>\n  Array.isArray(children) ? children : [children]\nexport const Children = {\n  map: (children: Child[], fn: (child: Child, index: number) => Child): Child[] =>\n    toArray(children).map(fn),\n  forEach: (children: Child[], fn: (child: Child, index: number) => void): void => {\n    toArray(children).forEach(fn)\n  },\n  count: (children: Child[]): number => toArray(children).length,\n  only: (_children: Child[]): Child => {\n    const children = toArray(_children)\n    if (children.length !== 1) {\n      throw new Error('Children.only() expects only one child')\n    }\n    return children[0]\n  },\n  toArray,\n}\n", "import type { Props } from '../../base.ts'\nimport type { FC, JSXNode, PropsWithChildren, RefObject } from '../../types.ts'\nimport { newJSXNode } from '../utils.ts'\nimport { createPortal, getNameSpaceContext } from '../render.ts'\nimport type { PreserveNodeType } from '../render.ts'\nimport { useContext } from '../../context.ts'\nimport { use, useCallback, useMemo, useState } from '../../hooks/index.ts'\nimport { FormContext, registerAction } from '../hooks/index.ts'\nimport { dataPrecedenceAttr, deDupeKeyMap, domRenderers } from '../../intrinsic-element/common.ts'\nimport type { IntrinsicElements } from '../../intrinsic-elements.ts'\n\n// this function is a testing utility and should not be exported to the user\nexport const clearCache = () => {\n  blockingPromiseMap = Object.create(null)\n  createdElements = Object.create(null)\n}\n\n// this function is exported for testing and should not be used by the user\nexport const composeRef = <T>(\n  ref: RefObject<T> | Function | undefined,\n  cb: (e: T) => void | (() => void)\n): ((e: T) => () => void) => {\n  return useMemo(\n    () => (e: T) => {\n      let refCleanup: (() => void) | undefined\n      if (ref) {\n        if (typeof ref === 'function') {\n          refCleanup =\n            ref(e) ||\n            (() => {\n              ref(null)\n            })\n        } else if (ref && 'current' in ref) {\n          ref.current = e\n          refCleanup = () => {\n            ref.current = null\n          }\n        }\n      }\n\n      const cbCleanup = cb(e)\n      return () => {\n        cbCleanup?.()\n        refCleanup?.()\n      }\n    },\n    [ref]\n  )\n}\n\nlet blockingPromiseMap: Record<string, Promise<Event> | undefined> = Object.create(null)\nlet createdElements: Record<string, HTMLElement> = Object.create(null)\nconst documentMetadataTag = (\n  tag: string,\n  props: Props,\n  preserveNodeType: PreserveNodeType | undefined,\n  supportSort: boolean,\n  supportBlocking: boolean\n) => {\n  if (props?.itemProp) {\n    return newJSXNode({\n      tag,\n      props,\n    })\n  }\n\n  const head = document.head\n\n  let { onLoad, onError, precedence, blocking, ...restProps } = props\n  let element: HTMLElement | null = null\n  let created = false\n\n  const deDupeKeys = deDupeKeyMap[tag]\n  let existingElements: NodeListOf<HTMLElement> | undefined = undefined\n  if (deDupeKeys.length > 0) {\n    const tags = head.querySelectorAll<HTMLElement>(tag)\n    LOOP: for (const e of tags) {\n      for (const key of deDupeKeyMap[tag]) {\n        if (e.getAttribute(key) === props[key]) {\n          element = e\n          break LOOP\n        }\n      }\n    }\n\n    if (!element) {\n      const cacheKey = deDupeKeys.reduce(\n        (acc, key) => (props[key] === undefined ? acc : `${acc}-${key}-${props[key]}`),\n        tag\n      )\n      created = !createdElements[cacheKey]\n      element = createdElements[cacheKey] ||= (() => {\n        const e = document.createElement(tag)\n        for (const key of deDupeKeys) {\n          if (props[key] !== undefined) {\n            e.setAttribute(key, props[key] as string)\n          }\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          if ((props as any).rel) {\n            e.setAttribute('rel', props.rel)\n          }\n        }\n        return e\n      })()\n    }\n  } else {\n    existingElements = head.querySelectorAll<HTMLElement>(tag)\n  }\n\n  precedence = supportSort ? precedence ?? '' : undefined\n  if (supportSort) {\n    restProps[dataPrecedenceAttr] = precedence\n  }\n\n  const insert = useCallback(\n    (e: HTMLElement) => {\n      if (deDupeKeys.length > 0) {\n        let found = false\n        for (const existingElement of head.querySelectorAll<HTMLElement>(tag)) {\n          if (found && existingElement.getAttribute(dataPrecedenceAttr) !== precedence) {\n            head.insertBefore(e, existingElement)\n            return\n          }\n          if (existingElement.getAttribute(dataPrecedenceAttr) === precedence) {\n            found = true\n          }\n        }\n\n        // if sentinel is not found, append to the end\n        head.appendChild(e)\n      } else if (existingElements) {\n        let found = false\n        for (const existingElement of existingElements!) {\n          if (existingElement === e) {\n            found = true\n            break\n          }\n        }\n        if (!found) {\n          // newly created element\n          head.insertBefore(\n            e,\n            head.contains(existingElements[0]) ? existingElements[0] : head.querySelector(tag)\n          )\n        }\n        existingElements = undefined\n      }\n    },\n    [precedence]\n  )\n\n  const ref = composeRef(props.ref, (e: HTMLElement) => {\n    const key = deDupeKeys[0]\n\n    if (preserveNodeType === 2) {\n      e.innerHTML = ''\n    }\n\n    if (created || existingElements) {\n      insert(e)\n    }\n\n    if (!onError && !onLoad) {\n      return\n    }\n\n    let promise = (blockingPromiseMap[e.getAttribute(key) as string] ||= new Promise<Event>(\n      (resolve, reject) => {\n        e.addEventListener('load', resolve)\n        e.addEventListener('error', reject)\n      }\n    ))\n    if (onLoad) {\n      promise = promise.then(onLoad)\n    }\n    if (onError) {\n      promise = promise.catch(onError)\n    }\n    promise.catch(() => {})\n  })\n\n  if (supportBlocking && blocking === 'render') {\n    const key = deDupeKeyMap[tag][0]\n    if (props[key]) {\n      const value = props[key]\n      const promise = (blockingPromiseMap[value] ||= new Promise<Event>((resolve, reject) => {\n        insert(element as HTMLElement)\n        element!.addEventListener('load', resolve)\n        element!.addEventListener('error', reject)\n      }))\n      use(promise)\n    }\n  }\n\n  const jsxNode = newJSXNode({\n    tag,\n    props: {\n      ...restProps,\n      ref,\n    },\n  }) as JSXNode & { e?: HTMLElement; p?: PreserveNodeType }\n\n  jsxNode.p = preserveNodeType // preserve for unmounting\n  if (element) {\n    jsxNode.e = element\n  }\n\n  return createPortal(\n    jsxNode,\n    head\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ) as any\n}\nexport const title: FC<PropsWithChildren> = (props) => {\n  const nameSpaceContext = getNameSpaceContext()\n  const ns = nameSpaceContext && useContext(nameSpaceContext)\n  if (ns?.endsWith('svg')) {\n    return newJSXNode({\n      tag: 'title',\n      props,\n    })\n  }\n  return documentMetadataTag('title', props, undefined, false, false)\n}\n\nexport const script: FC<PropsWithChildren<IntrinsicElements['script']>> = (props) => {\n  if (!props || ['src', 'async'].some((k) => !props[k])) {\n    return newJSXNode({\n      tag: 'style',\n      props,\n    })\n  }\n  return documentMetadataTag('script', props, 1, false, true)\n}\n\nexport const style: FC<PropsWithChildren<IntrinsicElements['style']>> = (props) => {\n  if (!props || !['href', 'precedence'].every((k) => k in props)) {\n    return newJSXNode({\n      tag: 'style',\n      props,\n    })\n  }\n  props['data-href'] = props.href\n  delete props.href\n  return documentMetadataTag('style', props, 2, true, true)\n}\n\nexport const link: FC<PropsWithChildren<IntrinsicElements['link']>> = (props) => {\n  if (\n    !props ||\n    ['onLoad', 'onError'].some((k) => k in props) ||\n    (props.rel === 'stylesheet' && (!('precedence' in props) || 'disabled' in props))\n  ) {\n    return newJSXNode({\n      tag: 'link',\n      props,\n    })\n  }\n  return documentMetadataTag('link', props, 1, 'precedence' in props, true)\n}\n\nexport const meta: FC<PropsWithChildren> = (props) => {\n  return documentMetadataTag('meta', props, undefined, false, false)\n}\n\nconst customEventFormAction = Symbol()\nexport const form: FC<\n  PropsWithChildren<{\n    action?: Function | string\n    method?: 'get' | 'post'\n    ref?: RefObject<HTMLFormElement> | ((e: HTMLFormElement | null) => void | (() => void))\n  }>\n> = (props) => {\n  const { action, ...restProps } = props\n  if (typeof action !== 'function') {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ;(restProps as any).action = action\n  }\n\n  const [state, setState] = useState<[FormData | null, boolean]>([null, false]) // [FormData, isDirty]\n  const onSubmit = useCallback<(ev: SubmitEvent | CustomEvent) => void>(\n    async (ev: SubmitEvent | CustomEvent) => {\n      const currentAction = ev.isTrusted\n        ? action\n        : (ev as CustomEvent).detail[customEventFormAction]\n      if (typeof currentAction !== 'function') {\n        return\n      }\n\n      ev.preventDefault()\n      const formData = new FormData(ev.target as HTMLFormElement)\n      setState([formData, true])\n      const actionRes = currentAction(formData)\n      if (actionRes instanceof Promise) {\n        registerAction(actionRes)\n        await actionRes\n      }\n      setState([null, true])\n    },\n    []\n  )\n\n  const ref = composeRef(props.ref, (el: HTMLFormElement) => {\n    el.addEventListener('submit', onSubmit)\n    return () => {\n      el.removeEventListener('submit', onSubmit)\n    }\n  })\n\n  const [data, isDirty] = state\n  state[1] = false\n  return newJSXNode({\n    tag: FormContext as unknown as Function,\n    props: {\n      value: {\n        pending: data !== null,\n        data,\n        method: data ? 'post' : null,\n        action: data ? action : null,\n      },\n      children: newJSXNode({\n        tag: 'form',\n        props: {\n          ...restProps,\n          ref,\n        },\n      }),\n    },\n    f: isDirty,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } as any) as any\n}\n\nconst formActionableElement = (\n  tag: string,\n  {\n    formAction,\n    ...props\n  }: {\n    formAction?: Function | string\n    ref?: RefObject<HTMLInputElement> | ((e: HTMLInputElement) => void | (() => void))\n  }\n) => {\n  if (typeof formAction === 'function') {\n    const onClick = useCallback<(ev: MouseEvent) => void>((ev: MouseEvent) => {\n      ev.preventDefault()\n      ;(ev.currentTarget! as HTMLInputElement).form!.dispatchEvent(\n        new CustomEvent('submit', { detail: { [customEventFormAction]: formAction } })\n      )\n    }, [])\n\n    props.ref = composeRef(props.ref, (el: HTMLInputElement) => {\n      el.addEventListener('click', onClick)\n      return () => {\n        el.removeEventListener('click', onClick)\n      }\n    })\n  }\n\n  return newJSXNode({\n    tag,\n    props,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  }) as any\n}\n\nexport const input: FC<PropsWithChildren<IntrinsicElements['input']>> = (props) =>\n  formActionableElement('input', props)\n\nexport const button: FC<PropsWithChildren<IntrinsicElements['button']>> = (props) =>\n  formActionableElement('button', props)\n\nObject.assign(domRenderers, {\n  title,\n  script,\n  style,\n  link,\n  meta,\n  form,\n  input,\n  button,\n})\n", "import type { JSX } from '../base.ts'\nimport { DOM_STASH } from '../constants.ts'\nimport { buildDataStack, update } from '../dom/render.ts'\nimport type { Context, Node, NodeObject, PendingType, UpdateHook } from '../dom/render.ts'\n\ntype UpdateStateFunction<T> = (newState: T | ((currentState: T) => T)) => void\n\nconst STASH_SATE = 0\nexport const STASH_EFFECT = 1\nconst STASH_CALLBACK = 2\nconst STASH_MEMO = 3\nconst STASH_REF = 4\n\nexport type EffectData = [\n  readonly unknown[] | undefined, // deps\n  (() => void | (() => void)) | undefined, // layout effect\n  (() => void) | undefined, // cleanup\n  (() => void) | undefined, // effect\n  (() => void) | undefined // insertion effect\n]\n\nconst resolvedPromiseValueMap: WeakMap<Promise<unknown>, unknown> = new WeakMap<\n  Promise<unknown>,\n  unknown\n>()\n\nconst isDepsChanged = (\n  prevDeps: readonly unknown[] | undefined,\n  deps: readonly unknown[] | undefined\n): boolean =>\n  !prevDeps ||\n  !deps ||\n  prevDeps.length !== deps.length ||\n  deps.some((dep, i) => dep !== prevDeps[i])\n\nlet viewTransitionState:\n  | [\n      boolean, // isUpdating\n      boolean // useViewTransition() is called\n    ]\n  | undefined = undefined\n\nconst documentStartViewTransition: (cb: () => void) => { finished: Promise<void> } = (cb) => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if ((document as any)?.startViewTransition) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (document as any).startViewTransition(cb)\n  } else {\n    cb()\n    return { finished: Promise.resolve() }\n  }\n}\n\nlet updateHook: UpdateHook | undefined = undefined\nconst viewTransitionHook = (\n  context: Context,\n  node: Node,\n  cb: (context: Context) => void\n): Promise<void> => {\n  const state: [boolean, boolean] = [true, false]\n  let lastVC = node.vC\n  return documentStartViewTransition(() => {\n    if (lastVC === node.vC) {\n      viewTransitionState = state\n      cb(context)\n      viewTransitionState = undefined\n      lastVC = node.vC\n    }\n  }).finished.then(() => {\n    if (state[1] && lastVC === node.vC) {\n      state[0] = false\n      viewTransitionState = state\n      cb(context)\n      viewTransitionState = undefined\n    }\n  })\n}\n\nexport const startViewTransition = (callback: () => void): void => {\n  updateHook = viewTransitionHook\n\n  try {\n    callback()\n  } finally {\n    updateHook = undefined\n  }\n}\n\nexport const useViewTransition = (): [boolean, (callback: () => void) => void] => {\n  const buildData = buildDataStack.at(-1) as [Context, NodeObject]\n  if (!buildData) {\n    return [false, () => {}]\n  }\n\n  if (viewTransitionState) {\n    viewTransitionState[1] = true\n  }\n  return [!!viewTransitionState?.[0], startViewTransition]\n}\n\n// PendingType is defined in \"../dom/render\", 3 is used for useDeferredValue\nconst pendingStack: [PendingType | 3, Promise<void>][] = []\nconst runCallback = (type: PendingType, callback: Function): void => {\n  let resolve: (() => void) | undefined\n  const promise = new Promise<void>((r) => (resolve = r))\n  pendingStack.push([type, promise])\n  try {\n    const res = callback()\n    if (res instanceof Promise) {\n      res.then(resolve, resolve)\n    } else {\n      resolve!()\n    }\n  } finally {\n    pendingStack.pop()\n  }\n}\n\nexport const startTransition = (callback: () => void): void => {\n  runCallback(1, callback)\n}\nconst startTransitionHook = (callback: () => void | Promise<void>): void => {\n  runCallback(2, callback)\n}\n\nexport const useTransition = (): [boolean, (callback: () => void | Promise<void>) => void] => {\n  const buildData = buildDataStack.at(-1) as [Context, NodeObject]\n  if (!buildData) {\n    return [false, () => {}]\n  }\n\n  const [error, setError] = useState<[Error]>()\n  const [state, updateState] = useState<boolean>()\n  if (error) {\n    throw error[0]\n  }\n  const startTransitionLocalHook = useCallback<typeof startTransitionHook>(\n    (callback) => {\n      startTransitionHook(() => {\n        updateState((state) => !state)\n        let res = callback()\n        if (res instanceof Promise) {\n          res = res.catch((e) => {\n            setError([e])\n          })\n        }\n        return res\n      })\n    },\n    [state]\n  )\n\n  const [context] = buildData\n  return [context[0] === 2, startTransitionLocalHook]\n}\n\ntype UseDeferredValue = <T>(value: T, initialValue?: T) => T\nexport const useDeferredValue: UseDeferredValue = <T>(value: T, ...rest: [T | undefined]): T => {\n  const [values, setValues] = useState<[T, T]>(\n    (rest.length ? [rest[0], rest[0]] : [value, value]) as [T, T]\n  )\n  if (Object.is(values[1], value)) {\n    return values[1]\n  }\n\n  pendingStack.push([3, Promise.resolve()])\n  updateHook = async (context: Context, _, cb: (context: Context) => void) => {\n    cb(context)\n    values[0] = value\n  }\n  setValues([values[0], value])\n  updateHook = undefined\n  pendingStack.pop()\n\n  return values[0]\n}\n\ntype UseStateType = {\n  <T>(initialState: T | (() => T)): [T, UpdateStateFunction<T>]\n  <T = undefined>(): [T | undefined, UpdateStateFunction<T | undefined>]\n}\nexport const useState: UseStateType = <T>(\n  initialState?: T | (() => T)\n): [T, UpdateStateFunction<T>] => {\n  const resolveInitialState = () =>\n    typeof initialState === 'function' ? (initialState as () => T)() : (initialState as T)\n\n  const buildData = buildDataStack.at(-1) as [unknown, NodeObject]\n  if (!buildData) {\n    return [resolveInitialState(), () => {}]\n  }\n  const [, node] = buildData\n\n  const stateArray = (node[DOM_STASH][1][STASH_SATE] ||= [])\n  const hookIndex = node[DOM_STASH][0]++\n\n  return (stateArray[hookIndex] ||= [\n    resolveInitialState(),\n    (newState: T | ((currentState: T) => T)) => {\n      const localUpdateHook = updateHook\n      const stateData = stateArray[hookIndex]\n      if (typeof newState === 'function') {\n        newState = (newState as (currentState: T) => T)(stateData[0])\n      }\n\n      if (!Object.is(newState, stateData[0])) {\n        stateData[0] = newState\n        if (pendingStack.length) {\n          const [pendingType, pendingPromise] = pendingStack.at(-1) as [\n            PendingType | 3,\n            Promise<void>\n          ]\n          Promise.all([\n            pendingType === 3\n              ? node\n              : update([pendingType, false, localUpdateHook as UpdateHook], node),\n            pendingPromise,\n          ]).then(([node]) => {\n            if (!node || !(pendingType === 2 || pendingType === 3)) {\n              return\n            }\n\n            const lastVC = node.vC\n\n            const addUpdateTask = () => {\n              setTimeout(() => {\n                // return if `node` is rerendered after current transition\n                if (lastVC !== node.vC) {\n                  return\n                }\n                update([pendingType === 3 ? 1 : 0, false, localUpdateHook as UpdateHook], node)\n              })\n            }\n\n            requestAnimationFrame(addUpdateTask)\n          })\n        } else {\n          update([0, false, localUpdateHook as UpdateHook], node)\n        }\n      }\n    },\n  ])\n}\n\nexport const useReducer = <T, A>(\n  reducer: (state: T, action: A) => T,\n  initialArg: T,\n  init?: (initialState: T) => T\n): [T, (action: A) => void] => {\n  const [state, setState] = useState(() => (init ? init(initialArg) : initialArg))\n  return [\n    state,\n    (action: A) => {\n      setState((state) => reducer(state, action))\n    },\n  ]\n}\n\nconst useEffectCommon = (\n  index: number,\n  effect: () => void | (() => void),\n  deps?: readonly unknown[]\n): void => {\n  const buildData = buildDataStack.at(-1) as [unknown, NodeObject]\n  if (!buildData) {\n    return\n  }\n  const [, node] = buildData\n\n  const effectDepsArray = (node[DOM_STASH][1][STASH_EFFECT] ||= [])\n  const hookIndex = node[DOM_STASH][0]++\n\n  const [prevDeps, , prevCleanup] = (effectDepsArray[hookIndex] ||= [])\n  if (isDepsChanged(prevDeps, deps)) {\n    if (prevCleanup) {\n      prevCleanup()\n    }\n    const runner = () => {\n      data[index] = undefined // clear this effect in order to avoid calling effect twice\n      data[2] = effect() as (() => void) | undefined\n    }\n    const data: EffectData = [deps, undefined, undefined, undefined, undefined]\n    data[index] = runner\n    effectDepsArray[hookIndex] = data\n  }\n}\nexport const useEffect = (effect: () => void | (() => void), deps?: readonly unknown[]): void =>\n  useEffectCommon(3, effect, deps)\nexport const useLayoutEffect = (\n  effect: () => void | (() => void),\n  deps?: readonly unknown[]\n): void => useEffectCommon(1, effect, deps)\nexport const useInsertionEffect = (\n  effect: () => void | (() => void),\n  deps?: readonly unknown[]\n): void => useEffectCommon(4, effect, deps)\n\nexport const useCallback = <T extends Function>(callback: T, deps: readonly unknown[]): T => {\n  const buildData = buildDataStack.at(-1) as [unknown, NodeObject]\n  if (!buildData) {\n    return callback\n  }\n  const [, node] = buildData\n\n  const callbackArray = (node[DOM_STASH][1][STASH_CALLBACK] ||= [])\n  const hookIndex = node[DOM_STASH][0]++\n\n  const prevDeps = callbackArray[hookIndex]\n  if (isDepsChanged(prevDeps?.[1], deps)) {\n    callbackArray[hookIndex] = [callback, deps]\n  } else {\n    callback = callbackArray[hookIndex][0] as T\n  }\n  return callback\n}\n\nexport type RefObject<T> = { current: T | null }\nexport const useRef = <T>(initialValue: T | null): RefObject<T> => {\n  const buildData = buildDataStack.at(-1) as [unknown, NodeObject]\n  if (!buildData) {\n    return { current: initialValue }\n  }\n  const [, node] = buildData\n\n  const refArray = (node[DOM_STASH][1][STASH_REF] ||= [])\n  const hookIndex = node[DOM_STASH][0]++\n\n  return (refArray[hookIndex] ||= { current: initialValue })\n}\n\nexport const use = <T>(promise: Promise<T>): T => {\n  const cachedRes = resolvedPromiseValueMap.get(promise) as [T] | [undefined, unknown] | undefined\n  if (cachedRes) {\n    if (cachedRes.length === 2) {\n      throw cachedRes[1]\n    }\n    return cachedRes[0] as T\n  }\n  promise.then(\n    (res) => resolvedPromiseValueMap.set(promise, [res]),\n    (e) => resolvedPromiseValueMap.set(promise, [undefined, e])\n  )\n\n  throw promise\n}\n\nexport const useMemo = <T>(factory: () => T, deps: readonly unknown[]): T => {\n  const buildData = buildDataStack.at(-1) as [unknown, NodeObject]\n  if (!buildData) {\n    return factory()\n  }\n  const [, node] = buildData\n\n  const memoArray = (node[DOM_STASH][1][STASH_MEMO] ||= [])\n  const hookIndex = node[DOM_STASH][0]++\n\n  const prevDeps = memoArray[hookIndex]\n  if (isDepsChanged(prevDeps?.[1], deps)) {\n    memoArray[hookIndex] = [factory(), deps]\n  }\n  return memoArray[hookIndex][0] as T\n}\n\nlet idCounter = 0\nexport const useId = (): string => useMemo(() => `:r${(idCounter++).toString(32)}:`, [])\n\n// Define to avoid errors. This hook currently does nothing.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const useDebugValue = (_value: unknown, _formatter?: (value: unknown) => string): void => {}\n\nexport const createRef = <T>(): RefObject<T> => {\n  return { current: null }\n}\n\nexport const forwardRef = <T, P = {}>(\n  Component: (props: P, ref?: RefObject<T>) => JSX.Element\n): ((props: P & { ref?: RefObject<T> }) => JSX.Element) => {\n  return (props) => {\n    const { ref, ...rest } = props\n    return Component(rest as P, ref)\n  }\n}\n\nexport const useImperativeHandle = <T>(\n  ref: RefObject<T>,\n  createHandle: () => T,\n  deps: readonly unknown[]\n): void => {\n  useEffect(() => {\n    ref.current = createHandle()\n    return () => {\n      ref.current = null\n    }\n  }, deps)\n}\n\nexport const useSyncExternalStore = <T>(\n  subscribe: (callback: (value: T) => void) => () => void,\n  getSnapshot: () => T,\n  getServerSnapshot?: () => T\n): T => {\n  const buildData = buildDataStack.at(-1) as [Context, unknown]\n  if (!buildData) {\n    // now a stringify process, maybe in server side\n    if (!getServerSnapshot) {\n      throw new Error('getServerSnapshot is required for server side rendering')\n    }\n    return getServerSnapshot()\n  }\n\n  const [serverSnapshotIsUsed] = useState<boolean>(!!(buildData[0][4] && getServerSnapshot))\n  const [state, setState] = useState(() =>\n    serverSnapshotIsUsed ? (getServerSnapshot as () => T)() : getSnapshot()\n  )\n  useEffect(() => {\n    if (serverSnapshotIsUsed) {\n      setState(getSnapshot())\n    }\n    return subscribe(() => {\n      setState(getSnapshot())\n    })\n  }, [])\n\n  return state\n}\n", "import type { Child, FC, JSXNode, Props } from '../base.ts'\nimport { toArray } from '../children.ts'\nimport { DOM_ERROR_HANDLER, DOM_INTERNAL_TAG, DOM_RENDERER, DOM_STASH } from '../constants.ts'\nimport type { Context as JSXContext } from '../context.ts'\nimport { globalContexts as globalJSXContexts, useContext } from '../context.ts'\nimport type { EffectData } from '../hooks/index.ts'\nimport { STASH_EFFECT } from '../hooks/index.ts'\nimport { normalizeIntrinsicElementKey, styleObjectForEach } from '../utils.ts'\nimport { createContext } from './context.ts' // import dom-specific versions\nimport { newJSXNode } from './utils.ts'\n\nconst HONO_PORTAL_ELEMENT = '_hp'\n\nconst eventAliasMap: Record<string, string> = {\n  Change: 'Input',\n  DoubleClick: 'DblClick',\n} as const\n\nconst nameSpaceMap: Record<string, string> = {\n  svg: '2000/svg',\n  math: '1998/Math/MathML',\n} as const\n\nconst skipProps: Set<string> = new Set(['children'])\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type HasRenderToDom = FC<any> & { [DOM_RENDERER]: FC<any> }\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type ErrorHandler = (error: any, retry: () => void) => Child | undefined\n\ntype Container = HTMLElement | DocumentFragment\ntype LocalJSXContexts = [JSXContext<unknown>, unknown][] | undefined\ntype SupportedElement = HTMLElement | SVGElement | MathMLElement\nexport type PreserveNodeType =\n  | 1 // preserve only self\n  | 2 // preserve self and children\n\nexport type NodeObject = {\n  pP: Props | undefined // previous props\n  nN: Node | undefined // next node\n  vC: Node[] // virtual dom children\n  pC?: Node[] // previous virtual dom children\n  vR: Node[] // virtual dom children to remove\n  s?: Node[] // shadow virtual dom children\n  n?: string // namespace\n  f?: boolean // force build\n  c: Container | undefined // container\n  e: SupportedElement | Text | undefined // rendered element\n  p?: PreserveNodeType // preserve HTMLElement if it will be unmounted\n  a?: boolean // cancel apply() if true\n  [DOM_STASH]:\n    | [\n        number, // current hook index\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        any[][], // stash for hooks\n        LocalJSXContexts, // context\n        [Context, Function, NodeObject] // [context, error handler, node] for closest error boundary or suspense\n      ]\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    | [number, any[][]]\n} & JSXNode\ntype NodeString = {\n  t: string // text content\n  d: boolean // is dirty\n} & {\n  e?: Text\n  // like a NodeObject\n  vC: undefined\n  nN: undefined\n  p?: true\n  // from JSXNode\n  key: undefined\n  tag: undefined\n}\nexport type Node = NodeString | NodeObject\n\nexport type PendingType =\n  | 0 // no pending\n  | 1 // global\n  | 2 // hook\nexport type UpdateHook = (\n  context: Context,\n  node: Node,\n  cb: (context: Context) => void\n) => Promise<void>\nexport type Context =\n  | [\n      PendingType, // PendingType\n      boolean, // got an error\n      UpdateHook, // update hook\n      boolean, // is in view transition\n      boolean, // is in top level render\n      [Context, Function, NodeObject][] //  [context, error handler, node] stack for this context\n    ]\n  | [PendingType, boolean, UpdateHook, boolean]\n  | [PendingType, boolean, UpdateHook]\n  | [PendingType, boolean]\n  | [PendingType]\n  | []\n\nexport const buildDataStack: [Context, Node][] = []\n\nconst refCleanupMap: WeakMap<Element, () => void> = new WeakMap()\n\nlet nameSpaceContext: JSXContext<string> | undefined = undefined\nexport const getNameSpaceContext = () => nameSpaceContext\n\nconst isNodeString = (node: Node): node is NodeString => 't' in (node as NodeString)\n\nconst getEventSpec = (key: string): [string, boolean] | undefined => {\n  const match = key.match(/^on([A-Z][a-zA-Z]+?(?:PointerCapture)?)(Capture)?$/)\n  if (match) {\n    const [, eventName, capture] = match\n    return [(eventAliasMap[eventName] || eventName).toLowerCase(), !!capture]\n  }\n  return undefined\n}\n\nconst toAttributeName = (element: SupportedElement, key: string): string =>\n  element instanceof SVGElement &&\n  /[A-Z]/.test(key) &&\n  (key in element.style || // Presentation attributes are findable in style object. \"clip-path\", \"font-size\", \"stroke-width\", etc.\n    key.match(/^(?:o|pai|str|u|ve)/)) // Other un-deprecated kebab-case attributes. \"overline-position\", \"paint-order\", \"strikethrough-position\", etc.\n    ? key.replace(/([A-Z])/g, '-$1').toLowerCase()\n    : key\n\nconst applyProps = (\n  container: SupportedElement,\n  attributes: Props,\n  oldAttributes?: Props\n): void => {\n  attributes ||= {}\n  for (let [key, value] of Object.entries(attributes)) {\n    if (!skipProps.has(key) && (!oldAttributes || oldAttributes[key] !== value)) {\n      key = normalizeIntrinsicElementKey(key)\n      const eventSpec = getEventSpec(key)\n      if (eventSpec) {\n        if (oldAttributes) {\n          container.removeEventListener(eventSpec[0], oldAttributes[key], eventSpec[1])\n        }\n        if (value != null) {\n          if (typeof value !== 'function') {\n            throw new Error(`Event handler for \"${key}\" is not a function`)\n          }\n          container.addEventListener(eventSpec[0], value, eventSpec[1])\n        }\n      } else if (key === 'dangerouslySetInnerHTML' && value) {\n        container.innerHTML = value.__html\n      } else if (key === 'ref') {\n        let cleanup\n        if (typeof value === 'function') {\n          cleanup = value(container) || (() => value(null))\n        } else if (value && 'current' in value) {\n          value.current = container\n          cleanup = () => (value.current = null)\n        }\n        refCleanupMap.set(container, cleanup)\n      } else if (key === 'style') {\n        const style = container.style\n        if (typeof value === 'string') {\n          style.cssText = value\n        } else {\n          style.cssText = ''\n          if (value != null) {\n            styleObjectForEach(value, style.setProperty.bind(style))\n          }\n        }\n      } else {\n        const nodeName = container.nodeName\n        if (key === 'value') {\n          if (nodeName === 'INPUT' || nodeName === 'TEXTAREA' || nodeName === 'SELECT') {\n            ;(container as unknown as HTMLInputElement).value =\n              value === null || value === undefined || value === false ? null : value\n\n            if (nodeName === 'TEXTAREA') {\n              container.textContent = value\n              continue\n            } else if (nodeName === 'SELECT') {\n              if ((container as unknown as HTMLSelectElement).selectedIndex === -1) {\n                ;(container as unknown as HTMLSelectElement).selectedIndex = 0\n              }\n              continue\n            }\n          }\n        } else if (\n          (key === 'checked' && nodeName === 'INPUT') ||\n          (key === 'selected' && nodeName === 'OPTION')\n        ) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          ;(container as any)[key] = value\n        }\n\n        const k = toAttributeName(container, key)\n\n        if (value === null || value === undefined || value === false) {\n          container.removeAttribute(k)\n        } else if (value === true) {\n          container.setAttribute(k, '')\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          container.setAttribute(k, value as string)\n        } else {\n          container.setAttribute(k, value.toString())\n        }\n      }\n    }\n  }\n  if (oldAttributes) {\n    for (let [key, value] of Object.entries(oldAttributes)) {\n      if (!skipProps.has(key) && !(key in attributes)) {\n        key = normalizeIntrinsicElementKey(key)\n        const eventSpec = getEventSpec(key)\n        if (eventSpec) {\n          container.removeEventListener(eventSpec[0], value, eventSpec[1])\n        } else if (key === 'ref') {\n          refCleanupMap.get(container)?.()\n        } else {\n          container.removeAttribute(toAttributeName(container, key))\n        }\n      }\n    }\n  }\n}\n\nconst invokeTag = (context: Context, node: NodeObject): Child[] => {\n  if (node.s) {\n    const res = node.s\n    node.s = undefined\n    return res as Child[]\n  }\n\n  node[DOM_STASH][0] = 0\n  buildDataStack.push([context, node])\n  const func = (node.tag as HasRenderToDom)[DOM_RENDERER] || node.tag\n  try {\n    return [\n      func.call(null, {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        ...((func as any).defaultProps || {}),\n        ...node.props,\n      }),\n    ]\n  } finally {\n    buildDataStack.pop()\n  }\n}\n\nconst getNextChildren = (\n  node: NodeObject,\n  container: Container,\n  nextChildren: Node[],\n  childrenToRemove: Node[],\n  callbacks: EffectData[]\n): void => {\n  childrenToRemove.push(...node.vR)\n  if (typeof node.tag === 'function') {\n    node[DOM_STASH][1][STASH_EFFECT]?.forEach((data: EffectData) => callbacks.push(data))\n  }\n  node.vC.forEach((child) => {\n    if (isNodeString(child)) {\n      nextChildren.push(child)\n    } else {\n      if (typeof child.tag === 'function' || child.tag === '') {\n        child.c = container\n        getNextChildren(child, container, nextChildren, childrenToRemove, callbacks)\n      } else {\n        nextChildren.push(child)\n        childrenToRemove.push(...child.vR)\n      }\n    }\n  })\n}\n\nconst findInsertBefore = (node: Node | undefined): SupportedElement | Text | null => {\n  if (!node) {\n    return null\n  } else if (node.tag === HONO_PORTAL_ELEMENT) {\n    return findInsertBefore(node.nN)\n  } else if (node.e) {\n    return node.e\n  }\n\n  if (node.vC) {\n    for (let i = 0, len = node.vC.length; i < len; i++) {\n      const e = findInsertBefore(node.vC[i])\n      if (e) {\n        return e\n      }\n    }\n  }\n\n  return findInsertBefore(node.nN)\n}\n\nconst removeNode = (node: Node): void => {\n  if (!isNodeString(node)) {\n    node[DOM_STASH]?.[1][STASH_EFFECT]?.forEach((data: EffectData) => data[2]?.())\n\n    refCleanupMap.get(node.e as Element)?.()\n    if (node.p === 2) {\n      node.vC?.forEach((n) => (n.p = 2))\n    }\n    node.vC?.forEach(removeNode)\n  }\n  if (!node.p) {\n    node.e?.remove()\n    delete node.e\n  }\n  if (typeof node.tag === 'function') {\n    updateMap.delete(node)\n    fallbackUpdateFnArrayMap.delete(node)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    delete (node as any)[DOM_STASH][3] // delete explicitly for avoid circular reference\n    node.a = true\n  }\n}\n\nconst apply = (node: NodeObject, container: Container): void => {\n  node.c = container\n  applyNodeObject(node, container)\n}\n\nconst applyNode = (node: Node, container: Container): void => {\n  if (isNodeString(node)) {\n    container.textContent = node.t\n  } else {\n    applyNodeObject(node, container)\n  }\n}\n\nconst findChildNodeIndex = (\n  childNodes: NodeListOf<ChildNode>,\n  child: ChildNode | null | undefined\n): number | undefined => {\n  if (!child) {\n    return\n  }\n\n  for (let i = 0, len = childNodes.length; i < len; i++) {\n    if (childNodes[i] === child) {\n      return i\n    }\n  }\n\n  return\n}\n\nconst cancelBuild: symbol = Symbol()\nconst applyNodeObject = (node: NodeObject, container: Container): void => {\n  const next: Node[] = []\n  const remove: Node[] = []\n  const callbacks: EffectData[] = []\n  getNextChildren(node, container, next, remove, callbacks)\n\n  const childNodes = container.childNodes\n  let offset =\n    findChildNodeIndex(childNodes, findInsertBefore(node.nN)) ??\n    findChildNodeIndex(childNodes, next.find((n) => n.tag !== HONO_PORTAL_ELEMENT && n.e)?.e) ??\n    childNodes.length\n\n  for (let i = 0, len = next.length; i < len; i++, offset++) {\n    const child = next[i]\n\n    let el: SupportedElement | Text\n    if (isNodeString(child)) {\n      if (child.e && child.d) {\n        child.e.textContent = child.t\n      }\n      child.d = false\n      el = child.e ||= document.createTextNode(child.t)\n    } else {\n      el = child.e ||= child.n\n        ? (document.createElementNS(child.n, child.tag as string) as SVGElement | MathMLElement)\n        : document.createElement(child.tag as string)\n      applyProps(el as HTMLElement, child.props, child.pP)\n      applyNode(child, el as HTMLElement)\n    }\n    if (child.tag === HONO_PORTAL_ELEMENT) {\n      offset--\n    } else if (childNodes[offset] !== el && childNodes[offset - 1] !== child.e) {\n      container.insertBefore(el, childNodes[offset] || null)\n    }\n  }\n  remove.forEach(removeNode)\n  callbacks.forEach(([, , , , cb]) => cb?.()) // invoke useInsertionEffect callbacks\n  callbacks.forEach(([, cb]) => cb?.()) // invoke useLayoutEffect callbacks\n  requestAnimationFrame(() => {\n    callbacks.forEach(([, , , cb]) => cb?.()) // invoke useEffect callbacks\n  })\n}\n\nconst fallbackUpdateFnArrayMap: WeakMap<\n  NodeObject,\n  Array<() => Promise<NodeObject | undefined>>\n> = new WeakMap<NodeObject, Array<() => Promise<NodeObject | undefined>>>()\nexport const build = (context: Context, node: NodeObject, children?: Child[]): void => {\n  const buildWithPreviousChildren = !children && node.pC\n  if (children) {\n    node.pC ||= node.vC\n  }\n\n  let foundErrorHandler: ErrorHandler | undefined\n  try {\n    children ||=\n      typeof node.tag == 'function' ? invokeTag(context, node) : toArray(node.props.children)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if ((children[0] as JSXNode)?.tag === '' && (children[0] as any)[DOM_ERROR_HANDLER]) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      foundErrorHandler = (children[0] as any)[DOM_ERROR_HANDLER] as ErrorHandler\n      context[5]!.push([context, foundErrorHandler, node])\n    }\n    const oldVChildren: Node[] = buildWithPreviousChildren\n      ? [...(node.pC as Node[])]\n      : node.vC\n      ? [...node.vC]\n      : []\n    const vChildren: Node[] = []\n    node.vR = buildWithPreviousChildren ? [...node.vC] : []\n    let prevNode: Node | undefined\n    children.flat().forEach((c: Child) => {\n      let child = buildNode(c)\n      if (child) {\n        if (\n          typeof child.tag === 'function' &&\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          !(child.tag as any)[DOM_INTERNAL_TAG]\n        ) {\n          if (globalJSXContexts.length > 0) {\n            child[DOM_STASH][2] = globalJSXContexts.map((c) => [c, c.values.at(-1)])\n          }\n          if (context[5]?.length) {\n            child[DOM_STASH][3] = context[5].at(-1) as [Context, ErrorHandler, NodeObject]\n          }\n        }\n\n        let oldChild: Node | undefined\n        const i = oldVChildren.findIndex(\n          isNodeString(child)\n            ? (c) => isNodeString(c)\n            : child.key !== undefined\n            ? (c) => c.key === (child as Node).key\n            : (c) => c.tag === (child as Node).tag\n        )\n        if (i !== -1) {\n          oldChild = oldVChildren[i]\n          oldVChildren.splice(i, 1)\n        }\n\n        let skipBuild = false\n        if (oldChild) {\n          if (isNodeString(child)) {\n            if ((oldChild as NodeString).t !== child.t) {\n              ;(oldChild as NodeString).t = child.t // update text content\n              ;(oldChild as NodeString).d = true\n            }\n            child = oldChild\n          } else if (oldChild.tag !== child.tag) {\n            node.vR.push(oldChild)\n          } else {\n            const pP = (oldChild.pP = oldChild.props)\n            oldChild.props = child.props\n            oldChild.f ||= child.f || node.f\n            if (typeof child.tag === 'function') {\n              oldChild[DOM_STASH][2] = child[DOM_STASH][2] || []\n              oldChild[DOM_STASH][3] = child[DOM_STASH][3]\n\n              if (!oldChild.f) {\n                const prevPropsKeys = Object.keys(pP)\n                const currentProps = oldChild.props\n                skipBuild =\n                  prevPropsKeys.length === Object.keys(currentProps).length &&\n                  prevPropsKeys.every((k) => k in currentProps && currentProps[k] === pP[k])\n              }\n            }\n            child = oldChild\n          }\n        } else if (!isNodeString(child) && nameSpaceContext) {\n          const ns = useContext(nameSpaceContext)\n          if (ns) {\n            child.n = ns\n          }\n        }\n\n        if (!isNodeString(child) && !skipBuild) {\n          build(context, child)\n          delete child.f\n        }\n        vChildren.push(child)\n\n        for (let p = prevNode; p && !isNodeString(p); p = p.vC?.at(-1) as NodeObject) {\n          p.nN = child\n        }\n        prevNode = child\n      }\n    })\n    node.vC = vChildren\n    node.vR.push(...oldVChildren)\n    if (buildWithPreviousChildren) {\n      delete node.pC\n    }\n  } catch (e) {\n    node.f = true\n    if (e === cancelBuild) {\n      if (foundErrorHandler) {\n        return\n      } else {\n        throw e\n      }\n    }\n\n    const [errorHandlerContext, errorHandler, errorHandlerNode] =\n      node[DOM_STASH]?.[3] || ([] as unknown as [undefined, undefined])\n\n    if (errorHandler) {\n      const fallbackUpdateFn = () =>\n        update([0, false, context[2] as UpdateHook], errorHandlerNode as NodeObject)\n      const fallbackUpdateFnArray =\n        fallbackUpdateFnArrayMap.get(errorHandlerNode as NodeObject) || []\n      fallbackUpdateFnArray.push(fallbackUpdateFn)\n      fallbackUpdateFnArrayMap.set(errorHandlerNode as NodeObject, fallbackUpdateFnArray)\n      const fallback = errorHandler(e, () => {\n        const fnArray = fallbackUpdateFnArrayMap.get(errorHandlerNode as NodeObject)\n        if (fnArray) {\n          const i = fnArray.indexOf(fallbackUpdateFn)\n          if (i !== -1) {\n            fnArray.splice(i, 1)\n            return fallbackUpdateFn()\n          }\n        }\n      })\n      if (fallback) {\n        if (context[0] === 1) {\n          // low priority render\n          context[1] = true\n        } else {\n          build(context, errorHandlerNode, [fallback])\n          if (\n            (errorHandler.length === 1 || context !== errorHandlerContext) &&\n            errorHandlerNode.c\n          ) {\n            // render error boundary immediately\n            apply(errorHandlerNode, errorHandlerNode.c as Container)\n            return\n          }\n        }\n        throw cancelBuild\n      }\n    }\n\n    throw e\n  } finally {\n    if (foundErrorHandler) {\n      context[5]!.pop()\n    }\n  }\n}\n\nexport const buildNode = (node: Child): Node | undefined => {\n  if (node === undefined || node === null || typeof node === 'boolean') {\n    return undefined\n  } else if (typeof node === 'string' || typeof node === 'number') {\n    return { t: node.toString(), d: true } as NodeString\n  } else {\n    if ('vR' in node) {\n      node = newJSXNode({\n        tag: (node as NodeObject).tag,\n        props: (node as NodeObject).props,\n        key: (node as NodeObject).key,\n        f: (node as NodeObject).f,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      } as any)\n    }\n    if (typeof (node as JSXNode).tag === 'function') {\n      ;(node as NodeObject)[DOM_STASH] = [0, []]\n    } else {\n      const ns = nameSpaceMap[(node as JSXNode).tag as string]\n      if (ns) {\n        nameSpaceContext ||= createContext('')\n        ;(node as JSXNode).props.children = [\n          {\n            tag: nameSpaceContext,\n            props: {\n              value: ((node as NodeObject).n = `http://www.w3.org/${ns}`),\n              children: (node as JSXNode).props.children,\n            },\n          },\n        ]\n      }\n    }\n    return node as NodeObject\n  }\n}\n\nconst replaceContainer = (node: NodeObject, from: DocumentFragment, to: Container): void => {\n  if (node.c === from) {\n    node.c = to\n    node.vC.forEach((child) => replaceContainer(child as NodeObject, from, to))\n  }\n}\n\nconst updateSync = (context: Context, node: NodeObject): void => {\n  node[DOM_STASH][2]?.forEach(([c, v]) => {\n    c.values.push(v)\n  })\n  try {\n    build(context, node, undefined)\n  } catch (e) {\n    return\n  }\n  if (node.a) {\n    delete node.a\n    return\n  }\n  node[DOM_STASH][2]?.forEach(([c]) => {\n    c.values.pop()\n  })\n  if (context[0] !== 1 || !context[1]) {\n    apply(node, node.c as Container)\n  }\n}\n\ntype UpdateMapResolve = (node: NodeObject | undefined) => void\nconst updateMap: WeakMap<NodeObject, [UpdateMapResolve, Function]> = new WeakMap<\n  NodeObject,\n  [UpdateMapResolve, Function]\n>()\nconst currentUpdateSets: Set<NodeObject>[] = []\nexport const update = async (\n  context: Context,\n  node: NodeObject\n): Promise<NodeObject | undefined> => {\n  context[5] ||= []\n\n  const existing = updateMap.get(node)\n  if (existing) {\n    // execute only the last update() call, so the previous update will be canceled.\n    existing[0](undefined)\n  }\n\n  let resolve: UpdateMapResolve | undefined\n  const promise = new Promise<NodeObject | undefined>((r) => (resolve = r))\n  updateMap.set(node, [\n    resolve as UpdateMapResolve,\n    () => {\n      if (context[2]) {\n        context[2](context, node, (context) => {\n          updateSync(context, node)\n        }).then(() => (resolve as UpdateMapResolve)(node))\n      } else {\n        updateSync(context, node)\n        ;(resolve as UpdateMapResolve)(node)\n      }\n    },\n  ])\n\n  if (currentUpdateSets.length) {\n    ;(currentUpdateSets.at(-1) as Set<NodeObject>).add(node)\n  } else {\n    await Promise.resolve()\n\n    const latest = updateMap.get(node)\n    if (latest) {\n      updateMap.delete(node)\n      latest[1]()\n    }\n  }\n\n  return promise\n}\n\nexport const renderNode = (node: NodeObject, container: Container): void => {\n  const context: Context = []\n  ;(context as Context)[5] = [] // error handler stack\n  ;(context as Context)[4] = true // start top level render\n  build(context, node, undefined)\n  ;(context as Context)[4] = false // finish top level render\n\n  const fragment = document.createDocumentFragment()\n  apply(node, fragment)\n  replaceContainer(node, fragment, container)\n  container.replaceChildren(fragment)\n}\n\nexport const render = (jsxNode: Child, container: Container): void => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  renderNode(buildNode({ tag: '', props: { children: jsxNode } } as any) as NodeObject, container)\n}\n\nexport const flushSync = (callback: () => void): void => {\n  const set = new Set<NodeObject>()\n  currentUpdateSets.push(set)\n  callback()\n  set.forEach((node) => {\n    const latest = updateMap.get(node)\n    if (latest) {\n      updateMap.delete(node)\n      latest[1]()\n    }\n  })\n  currentUpdateSets.pop()\n}\n\nexport const createPortal = (children: Child, container: HTMLElement, key?: string): Child =>\n  ({\n    tag: HONO_PORTAL_ELEMENT,\n    props: {\n      children,\n    },\n    key,\n    e: container,\n    p: 1,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } as any)\n", "/**\n * Provide hooks used only in jsx/dom\n */\n\nimport type { Context } from '../../context.ts'\nimport { useContext } from '../../context.ts'\nimport { createContext } from '../context.ts'\nimport { useCallback, useState } from '../../hooks/index.ts'\nimport { PERMALINK } from '../../constants.ts'\n\ntype FormStatus =\n  | {\n      pending: false\n      data: null\n      method: null\n      action: null\n    }\n  | {\n      pending: true\n      data: FormData\n      method: 'get' | 'post'\n      action: string | ((formData: FormData) => void | Promise<void>)\n    }\nexport const FormContext: Context<FormStatus> = createContext<FormStatus>({\n  pending: false,\n  data: null,\n  method: null,\n  action: null,\n})\n\nconst actions: Set<Promise<unknown>> = new Set()\nexport const registerAction = (action: Promise<unknown>) => {\n  actions.add(action)\n  action.finally(() => actions.delete(action))\n}\n\n/**\n * This hook returns the current form status\n * @returns FormStatus\n */\nexport const useFormStatus = (): FormStatus => {\n  return useContext(FormContext)\n}\n\n/**\n * This hook returns the current state and a function to update the state optimistically\n * The current state is updated optimistically and then reverted to the original state when all actions are resolved\n * @param state\n * @param updateState\n * @returns [T, (action: N) => void]\n */\nexport const useOptimistic = <T, N>(\n  state: T,\n  updateState: (currentState: T, action: N) => T\n): [T, (action: N) => void] => {\n  const [optimisticState, setOptimisticState] = useState(state)\n  if (actions.size > 0) {\n    Promise.all(actions).finally(() => {\n      setOptimisticState(state)\n    })\n  } else {\n    setOptimisticState(state)\n  }\n\n  const cb = useCallback((newData: N) => {\n    setOptimisticState((currentState) => updateState(currentState, newData))\n  }, [])\n\n  return [optimisticState, cb]\n}\n\n/**\n * This hook returns the current state and a function to update the state by form action\n * @param fn\n * @param initialState\n * @param permalink\n * @returns [T, (data: FormData) => void]\n */\nexport const useActionState = <T>(\n  fn: Function,\n  initialState: T,\n  permalink?: string\n): [T, Function] => {\n  const [state, setState] = useState(initialState)\n  const actionState = async (data: FormData) => {\n    setState(await fn(state, data))\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ;(actionState as any)[PERMALINK] = permalink\n  return [state, actionState]\n}\n", "/**\n * @module\n * This module provides the `hono/jsx/dom` dev runtime.\n */\n\nimport type { JSXNode, Props } from '../base.ts'\nimport { newJSXNode } from './utils.ts'\nimport * as intrinsicElementTags from './intrinsic-element/components.ts'\n\nexport const jsxDEV = (tag: string | Function, props: Props, key?: string): JSXNode => {\n  return newJSXNode({\n    tag:\n      (typeof tag === 'string' && intrinsicElementTags[tag as keyof typeof intrinsicElementTags]) ||\n      tag,\n    props,\n    key,\n  })\n}\n\nexport const Fragment = (props: Record<string, unknown>): JSXNode => jsxDEV('', props, undefined)\n", "import type { Child, FC, PropsWithChildren } from '../index.ts'\nimport type { ErrorHandler, FallbackRender } from '../components.ts'\nimport { DOM_ERROR_HANDLER } from '../constants.ts'\nimport { Fragment } from './jsx-runtime.ts'\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const ErrorBoundary: FC<\n  PropsWithChildren<{\n    fallback?: Child\n    fallbackRender?: FallbackRender\n    onError?: ErrorHandler\n  }>\n> = (({ children, fallback, fallbackRender, onError }: any) => {\n  const res = Fragment({ children })\n  ;(res as any)[DOM_ERROR_HANDLER] = (err: any) => {\n    if (err instanceof Promise) {\n      throw err\n    }\n    onError?.(err)\n    return fallbackRender?.(err) || fallback\n  }\n  return res\n}) as any\n\nexport const Suspense: FC<PropsWithChildren<{ fallback: any }>> = (({\n  children,\n  fallback,\n}: any) => {\n  const res = Fragment({ children })\n  ;(res as any)[DOM_ERROR_HANDLER] = (err: any, retry: () => void) => {\n    if (!(err instanceof Promise)) {\n      throw err\n    }\n    err.finally(retry)\n    return fallback\n  }\n  return res\n}) as any\n/* eslint-enable @typescript-eslint/no-explicit-any */\n", "import { raw } from '../helper/html/index.ts'\nimport type { HtmlEscapedCallback, HtmlEscapedString } from '../utils/html.ts'\nimport { HtmlEscapedCallbackPhase, resolveCallback } from '../utils/html.ts'\nimport { DOM_RENDERER } from './constants.ts'\nimport { ErrorBoundary as ErrorBoundaryDomRenderer } from './dom/components.ts'\nimport type { HasRenderToDom } from './dom/render.ts'\nimport type { Child, FC, PropsWithChildren } from './index.ts'\n\nlet errorBoundaryCounter = 0\n\nexport const childrenToString = async (children: Child[]): Promise<HtmlEscapedString[]> => {\n  try {\n    return children\n      .flat()\n      .map((c) => (c == null || typeof c === 'boolean' ? '' : c.toString())) as HtmlEscapedString[]\n  } catch (e) {\n    if (e instanceof Promise) {\n      await e\n      return childrenToString(children)\n    } else {\n      throw e\n    }\n  }\n}\n\nexport type ErrorHandler = (error: Error) => void\nexport type FallbackRender = (error: Error) => Child\n\n/**\n * @experimental\n * `ErrorBoundary` is an experimental feature.\n * The API might be changed.\n */\nexport const ErrorBoundary: FC<\n  PropsWithChildren<{\n    fallback?: Child\n    fallbackRender?: FallbackRender\n    onError?: ErrorHandler\n  }>\n> = async ({ children, fallback, fallbackRender, onError }) => {\n  if (!children) {\n    return raw('')\n  }\n\n  if (!Array.isArray(children)) {\n    children = [children]\n  }\n\n  let fallbackStr: string | undefined\n  const fallbackRes = (error: Error): HtmlEscapedString => {\n    onError?.(error)\n    return (fallbackStr || fallbackRender?.(error) || '').toString() as HtmlEscapedString\n  }\n  let resArray: HtmlEscapedString[] | Promise<HtmlEscapedString[]>[] = []\n  try {\n    resArray = children.map((c) =>\n      c == null || typeof c === 'boolean' ? '' : c.toString()\n    ) as HtmlEscapedString[]\n  } catch (e) {\n    fallbackStr = await fallback?.toString()\n    if (e instanceof Promise) {\n      resArray = [\n        e.then(() => childrenToString(children as Child[])).catch((e) => fallbackRes(e)),\n      ] as Promise<HtmlEscapedString[]>[]\n    } else {\n      resArray = [fallbackRes(e as Error)]\n    }\n  }\n\n  if (resArray.some((res) => (res as {}) instanceof Promise)) {\n    fallbackStr ||= await fallback?.toString()\n    const index = errorBoundaryCounter++\n    const replaceRe = RegExp(`(<template id=\"E:${index}\"></template>.*?)(.*?)(<!--E:${index}-->)`)\n    const caught = false\n    const catchCallback = ({ error, buffer }: { error: Error; buffer?: [string] }) => {\n      if (caught) {\n        return ''\n      }\n\n      const fallbackResString = fallbackRes(error)\n      if (buffer) {\n        buffer[0] = buffer[0].replace(replaceRe, fallbackResString)\n      }\n      return buffer\n        ? ''\n        : `<template data-hono-target=\"E:${index}\">${fallbackResString}</template><script>\n((d,c,n) => {\nc=d.currentScript.previousSibling\nd=d.getElementById('E:${index}')\nif(!d)return\ndo{n=d.nextSibling;n.remove()}while(n.nodeType!=8||n.nodeValue!='E:${index}')\nd.replaceWith(c.content)\n})(document)\n</script>`\n    }\n    return raw(`<template id=\"E:${index}\"></template><!--E:${index}-->`, [\n      ({ phase, buffer, context }) => {\n        if (phase === HtmlEscapedCallbackPhase.BeforeStream) {\n          return\n        }\n        return Promise.all(resArray)\n          .then(async (htmlArray) => {\n            htmlArray = htmlArray.flat()\n            const content = htmlArray.join('')\n            let html = buffer\n              ? ''\n              : `<template data-hono-target=\"E:${index}\">${content}</template><script>\n((d,c) => {\nc=d.currentScript.previousSibling\nd=d.getElementById('E:${index}')\nif(!d)return\nd.parentElement.insertBefore(c.content,d.nextSibling)\n})(document)\n</script>`\n\n            if (htmlArray.every((html) => !(html as HtmlEscapedString).callbacks?.length)) {\n              if (buffer) {\n                buffer[0] = buffer[0].replace(replaceRe, content)\n              }\n              return html\n            }\n\n            if (buffer) {\n              buffer[0] = buffer[0].replace(\n                replaceRe,\n                (_all, pre, _, post) => `${pre}${content}${post}`\n              )\n            }\n\n            const callbacks = htmlArray\n              .map((html) => (html as HtmlEscapedString).callbacks || [])\n              .flat()\n\n            if (phase === HtmlEscapedCallbackPhase.Stream) {\n              html = await resolveCallback(\n                html,\n                HtmlEscapedCallbackPhase.BeforeStream,\n                true,\n                context\n              )\n            }\n\n            let resolvedCount = 0\n            const promises = callbacks.map<HtmlEscapedCallback>(\n              (c) =>\n                (...args) =>\n                  c(...args)\n                    ?.then((content) => {\n                      resolvedCount++\n\n                      if (buffer) {\n                        if (resolvedCount === callbacks.length) {\n                          buffer[0] = buffer[0].replace(replaceRe, (_all, _pre, content) => content)\n                        }\n                        buffer[0] += content\n                        return raw('', (content as HtmlEscapedString).callbacks)\n                      }\n\n                      return raw(\n                        content +\n                          (resolvedCount !== callbacks.length\n                            ? ''\n                            : `<script>\n((d,c,n) => {\nd=d.getElementById('E:${index}')\nif(!d)return\nn=d.nextSibling\nwhile(n.nodeType!=8||n.nodeValue!='E:${index}'){n=n.nextSibling}\nn.remove()\nd.remove()\n})(document)\n</script>`),\n                        (content as HtmlEscapedString).callbacks\n                      )\n                    })\n                    .catch((error) => catchCallback({ error, buffer }))\n            )\n\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return raw(html, promises as any)\n          })\n          .catch((error) => catchCallback({ error, buffer }))\n      },\n    ])\n  } else {\n    return raw(resArray.join(''))\n  }\n}\n;(ErrorBoundary as HasRenderToDom)[DOM_RENDERER] = ErrorBoundaryDomRenderer\n", "/**\n * @module\n * This module enables JSX to supports streaming Response.\n */\n\nimport { raw } from '../helper/html/index.ts'\nimport { HtmlEscapedCallbackPhase, resolveCallback } from '../utils/html.ts'\nimport type { HtmlEscapedString } from '../utils/html.ts'\nimport { childrenToString } from './components.ts'\nimport { DOM_RENDERER, DOM_STASH } from './constants.ts'\nimport { Suspense as SuspenseDomRenderer } from './dom/components.ts'\nimport { buildDataStack } from './dom/render.ts'\nimport type { HasRenderToDom, NodeObject } from './dom/render.ts'\nimport type { Child, FC, PropsWithChildren } from './index.ts'\n\nlet suspenseCounter = 0\n\n/**\n * @experimental\n * `Suspense` is an experimental feature.\n * The API might be changed.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const Suspense: FC<PropsWithChildren<{ fallback: any }>> = async ({\n  children,\n  fallback,\n}) => {\n  if (!children) {\n    return fallback.toString()\n  }\n  if (!Array.isArray(children)) {\n    children = [children]\n  }\n\n  let resArray: HtmlEscapedString[] | Promise<HtmlEscapedString[]>[] = []\n\n  // for use() hook\n  const stackNode = { [DOM_STASH]: [0, []] } as unknown as NodeObject\n  const popNodeStack = (value?: unknown) => {\n    buildDataStack.pop()\n    return value\n  }\n\n  try {\n    stackNode[DOM_STASH][0] = 0\n    buildDataStack.push([[], stackNode])\n    resArray = children.map((c) =>\n      c == null || typeof c === 'boolean' ? '' : c.toString()\n    ) as HtmlEscapedString[]\n  } catch (e) {\n    if (e instanceof Promise) {\n      resArray = [\n        e.then(() => {\n          stackNode[DOM_STASH][0] = 0\n          buildDataStack.push([[], stackNode])\n          return childrenToString(children as Child[]).then(popNodeStack)\n        }),\n      ] as Promise<HtmlEscapedString[]>[]\n    } else {\n      throw e\n    }\n  } finally {\n    popNodeStack()\n  }\n\n  if (resArray.some((res) => (res as {}) instanceof Promise)) {\n    const index = suspenseCounter++\n    const fallbackStr = await fallback.toString()\n    return raw(`<template id=\"H:${index}\"></template>${fallbackStr}<!--/$-->`, [\n      ...(fallbackStr.callbacks || []),\n      ({ phase, buffer, context }) => {\n        if (phase === HtmlEscapedCallbackPhase.BeforeStream) {\n          return\n        }\n        return Promise.all(resArray).then(async (htmlArray) => {\n          htmlArray = htmlArray.flat()\n          const content = htmlArray.join('')\n          if (buffer) {\n            buffer[0] = buffer[0].replace(\n              new RegExp(`<template id=\"H:${index}\"></template>.*?<!--/\\\\$-->`),\n              content\n            )\n          }\n          let html = buffer\n            ? ''\n            : `<template data-hono-target=\"H:${index}\">${content}</template><script>\n((d,c,n) => {\nc=d.currentScript.previousSibling\nd=d.getElementById('H:${index}')\nif(!d)return\ndo{n=d.nextSibling;n.remove()}while(n.nodeType!=8||n.nodeValue!='/$')\nd.replaceWith(c.content)\n})(document)\n</script>`\n\n          const callbacks = htmlArray\n            .map((html) => (html as HtmlEscapedString).callbacks || [])\n            .flat()\n          if (!callbacks.length) {\n            return html\n          }\n\n          if (phase === HtmlEscapedCallbackPhase.Stream) {\n            html = await resolveCallback(html, HtmlEscapedCallbackPhase.BeforeStream, true, context)\n          }\n\n          return raw(html, callbacks)\n        })\n      },\n    ])\n  } else {\n    return raw(resArray.join(''))\n  }\n}\n;(Suspense as HasRenderToDom)[DOM_RENDERER] = SuspenseDomRenderer\n\nconst textEncoder = new TextEncoder()\n/**\n * @experimental\n * `renderToReadableStream()` is an experimental feature.\n * The API might be changed.\n */\nexport const renderToReadableStream = (\n  str: HtmlEscapedString | Promise<HtmlEscapedString>,\n  onError: (e: unknown) => string | void = console.trace\n): ReadableStream<Uint8Array> => {\n  const reader = new ReadableStream<Uint8Array>({\n    async start(controller) {\n      try {\n        const tmp = str instanceof Promise ? await str : await str.toString()\n        const context = typeof tmp === 'object' ? tmp : {}\n        const resolved = await resolveCallback(\n          tmp,\n          HtmlEscapedCallbackPhase.BeforeStream,\n          true,\n          context\n        )\n        controller.enqueue(textEncoder.encode(resolved))\n\n        let resolvedCount = 0\n        const callbacks: Promise<void>[] = []\n        const then = (promise: Promise<string>) => {\n          callbacks.push(\n            promise\n              .catch((err) => {\n                console.log(err)\n                onError(err)\n                return ''\n              })\n              .then(async (res) => {\n                res = await resolveCallback(\n                  res,\n                  HtmlEscapedCallbackPhase.BeforeStream,\n                  true,\n                  context\n                )\n                ;(res as HtmlEscapedString).callbacks\n                  ?.map((c) => c({ phase: HtmlEscapedCallbackPhase.Stream, context }))\n                  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                  .filter<Promise<string>>(Boolean as any)\n                  .forEach(then)\n                resolvedCount++\n                controller.enqueue(textEncoder.encode(res))\n              })\n          )\n        }\n        ;(resolved as HtmlEscapedString).callbacks\n          ?.map((c) => c({ phase: HtmlEscapedCallbackPhase.Stream, context }))\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          .filter<Promise<string>>(Boolean as any)\n          .forEach(then)\n        while (resolvedCount !== callbacks.length) {\n          await Promise.all(callbacks)\n        }\n      } catch (e) {\n        // maybe the connection was closed\n        onError(e)\n      }\n\n      controller.close()\n    },\n  })\n  return reader\n}\n", "/// <reference lib=\"dom\" />\nimport { LoremIpsum } from \"@/components/LoremIpsum.tsx\";\nimport { useState } from \"hono/jsx\";\nimport { render } from \"hono/jsx/dom\";\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n  return (\n    <div>\n      <p>Count: {count}</p>\n      <button onClick={() => setCount(count + 1)}>Increment</button>\n      <LoremIpsum />\n    </div>\n  );\n}\n\n\nrender(<Counter />, document.querySelector(\"main\")!);\n"],
  "mappings": "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",
  "names": ["str", "style", "components_exports", "node", "style", "c", "context", "nameSpaceContext", "components_exports", "ErrorBoundary", "e", "html", "content", "Suspense", "html"]
}
